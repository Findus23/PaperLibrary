# Generated by Django 3.1.1 on 2020-09-24 14:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('affiliation', models.CharField(max_length=1000)),
                ('orcid_id', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PDF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pdfs')),
                ('sha265', models.CharField(editable=False, max_length=64)),
                ('full_text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('abstract', models.TextField()),
                ('doi', models.CharField(max_length=50, unique=True)),
                ('bibtext', models.TextField()),
                ('publication', models.TextField()),
                ('doctype', models.TextField()),
                ('arxiv_identifier', models.CharField(max_length=10, unique=True)),
                ('bibcode', models.CharField(max_length=20, unique=True)),
                ('year', models.IntegerField()),
                ('pubdate', models.DateField()),
                ('authors', models.ManyToManyField(related_name='papers', to='library.Author')),
                ('first_author', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='library.author')),
                ('pdfs', models.ManyToManyField(related_name='papers', to='library.PDF')),
            ],
        ),
    ]
